'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="foods")>  _
Partial Public Class DataClasses2DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertTable_Food(instance As Table_Food)
    End Sub
  Partial Private Sub UpdateTable_Food(instance As Table_Food)
    End Sub
  Partial Private Sub DeleteTable_Food(instance As Table_Food)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.System.Configuration.ConfigurationManager.ConnectionStrings("foodsConnectionString").ConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Table_Foods() As System.Data.Linq.Table(Of Table_Food)
		Get
			Return Me.GetTable(Of Table_Food)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Table_Foods")>  _
Partial Public Class Table_Food
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _name As String
	
	Private _image As String
	
	Private _detail As String
	
	Private _tel As String
	
	Private _facebook As String
	
	Private _googlemap As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnnameChanging(value As String)
    End Sub
    Partial Private Sub OnnameChanged()
    End Sub
    Partial Private Sub OnimageChanging(value As String)
    End Sub
    Partial Private Sub OnimageChanged()
    End Sub
    Partial Private Sub OndetailChanging(value As String)
    End Sub
    Partial Private Sub OndetailChanged()
    End Sub
    Partial Private Sub OntelChanging(value As String)
    End Sub
    Partial Private Sub OntelChanged()
    End Sub
    Partial Private Sub OnfacebookChanging(value As String)
    End Sub
    Partial Private Sub OnfacebookChanged()
    End Sub
    Partial Private Sub OngooglemapChanging(value As String)
    End Sub
    Partial Private Sub OngooglemapChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_name", DbType:="NChar(200)")>  _
	Public Property name() As String
		Get
			Return Me._name
		End Get
		Set
			If (String.Equals(Me._name, value) = false) Then
				Me.OnnameChanging(value)
				Me.SendPropertyChanging
				Me._name = value
				Me.SendPropertyChanged("name")
				Me.OnnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_image", DbType:="NChar(300)")>  _
	Public Property image() As String
		Get
			Return Me._image
		End Get
		Set
			If (String.Equals(Me._image, value) = false) Then
				Me.OnimageChanging(value)
				Me.SendPropertyChanging
				Me._image = value
				Me.SendPropertyChanged("image")
				Me.OnimageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_detail", DbType:="NChar(500)")>  _
	Public Property detail() As String
		Get
			Return Me._detail
		End Get
		Set
			If (String.Equals(Me._detail, value) = false) Then
				Me.OndetailChanging(value)
				Me.SendPropertyChanging
				Me._detail = value
				Me.SendPropertyChanged("detail")
				Me.OndetailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tel", DbType:="NChar(50)")>  _
	Public Property tel() As String
		Get
			Return Me._tel
		End Get
		Set
			If (String.Equals(Me._tel, value) = false) Then
				Me.OntelChanging(value)
				Me.SendPropertyChanging
				Me._tel = value
				Me.SendPropertyChanged("tel")
				Me.OntelChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_facebook", DbType:="NChar(100)")>  _
	Public Property facebook() As String
		Get
			Return Me._facebook
		End Get
		Set
			If (String.Equals(Me._facebook, value) = false) Then
				Me.OnfacebookChanging(value)
				Me.SendPropertyChanging
				Me._facebook = value
				Me.SendPropertyChanged("facebook")
				Me.OnfacebookChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_googlemap", DbType:="NChar(150)")>  _
	Public Property googlemap() As String
		Get
			Return Me._googlemap
		End Get
		Set
			If (String.Equals(Me._googlemap, value) = false) Then
				Me.OngooglemapChanging(value)
				Me.SendPropertyChanging
				Me._googlemap = value
				Me.SendPropertyChanged("googlemap")
				Me.OngooglemapChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
